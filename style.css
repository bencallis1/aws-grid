html,
body {
  height: 100vh;
  width: 100vw;
  margin: 0;
  padding: 0;
  /*need base font when using rem */
  font-size: 16px;
  font-family: 'Open Sans Condensed', 'Open Sans', sans-serif;
  overflow-x: hidden;
}

.sticky-header {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  background-color: #212121;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
  padding: 0 15px;
  text-align: left;
  z-index: 1000;
  display: flex;
  justify-content: flex-start;
  align-items: center;
  height: 75px
}

.sticky-header h1 {
  margin: 0;
  color: white;
  text-transform: uppercase;
}

body {
  padding-top: 75px;
  /* Adjust based on your header height */
  background-color: white;
  margin: 0;
  overflow-y: auto;
  overflow-x: hidden;
  width: 100vw;
  height: 100vh;
}

.mosaic-grid {
  padding-top: 0;
  /* Background color is now set dynamically in JavaScript */
}

.mosaic-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  grid-auto-rows: minmax(200px, auto);
  min-height: calc(100vh - 70px);
  margin: 0;
  padding: 0;
  gap: 0;
  width: 100%;
  grid-gap: 0;
  border-collapse: collapse;
  overflow: visible;
}

/* Mobile-specific adjustments */
@media screen and (max-width: 768px) {
  body {
    padding-top: 60px;
    /* Smaller top padding on mobile */
  }

  .sticky-header {
    padding: 10px;
  }

  .sticky-header img {
    height: 45px;
  }
}

/* Screen size less than 600px - make tiles stack vertically */
@media screen and (max-width: 600px) {
  .mosaic-grid {
    display: flex;
    flex-direction: column;
    overflow-x: hidden;
    width: 100%;
  }
}

/* Screen size greater than 600px - min-width 300px for tiles */
@media screen and (min-width: 601px) {
  .mosaic-grid {
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    grid-auto-flow: dense;
  }

  /* Override multi-column spans on mobile */
  .item-wide,
  .item-large {
    grid-column: span 1;
  }

  /* Keep some height variation */
  .item-tall,
  .item-large {
    grid-row: span 2;
  }

  .grid-item h2 {
    font-size: 24px;
  }

  .grid-item p {
    font-size: 0.8rem;
  }

  /* Make chart grid items responsive */
  .grid-item:has(.chart-container) {
    min-width: 600px;
    min-height: 600px;
    width: calc(100% - 10px);
    height: calc(100% - 10px);
    max-width: 1200px;
    max-height: 1200px;
  }
}

/* Width controlled by specific breakpoints above */

.grid-item {
  display: flex;
  /* I think we do want to have these text aligned at the top. The reason is because when we have a tall skinny grid item with text vertically centered it will visually throw off the composition  */
  align-items: flex-start;
  justify-content: center;
  font-size: 1.5rem;
  font-weight: bold;
  color: white;
  will-change: transform;
  transition: transform 0.3s ease;
  padding: 0;
  overflow: hidden;
  position: relative;
  width: 100%;
  height: 100%;
  margin: 0;
  box-sizing: border-box;
  border: none;
}

/* Min-width based on screen size */
@media screen and (max-width: 600px) {
  .grid-item {
    min-width: 100%;
    width: 100%;
    min-height: 200px;
  }

  /* Force all items to be full width regardless of their grid-span classes */
  .item-wide,
  .item-tall,
  .item-large {
    grid-column: auto !important;
    grid-row: auto !important;
  }
}

@media screen and (min-width: 601px) {
  .grid-item {
    min-width: 300px;
  }
}

.grid-item h2 {
  /* font-size: 40px; */
  text-align: left;
  font-size: 1.8rem;
  line-height: 1.9rem;
  margin: 0;
  padding: 10px;
  width: 100%;
  text-transform: uppercase;
  letter-spacing: 1px;
  /* line-height: 40px; */
  font-weight: 800;
}

.grid-item p {
  font-size: 1.2rem;
  /* font-size: 24px; */
  line-height: 26px;
  letter-spacing: 1px;
  font-weight: normal;
  text-align: left;
  margin: 0;
  text-transform: uppercase;
}

.grid-item img {
  max-width: 100%;
  max-height: 100%;
  object-fit: cover;
}

.grid-item.hover-enabled:hover {
  transform: scale(1.02);
}

/* Different sized grid items */
.item-wide {
  grid-column: span 2;
}

.item-tall {
  grid-row: span 2;
}

.item-large {
  grid-column: span 2;
  grid-row: span 2;
}

/* Colors are now set dynamically in JavaScript */

/* Loading animation styles */
.grid-item.loading {
  position: relative;
  overflow: hidden;
}

.grid-item.loading::before {
  content: "";
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  animation: loading-shine 1.5s infinite;
}

@keyframes loading-shine {
  0% {
    left: -100%;
  }

  100% {
    left: 100%;
  }
}

.grid-item.loading::after {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  width: 30px;
  height: 30px;
  margin: -15px 0 0 -15px;
  border: 3px solid rgba(255, 255, 255, 0.3);
  border-radius: 50%;
  border-top-color: #fff;
  animation: loading-spin 1s infinite linear;
}

@keyframes loading-spin {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

/* Styles for the Observable Plot container */
#plot-container {
  background-color: rgba(33, 33, 33, 0.9);
  padding: 20px;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 4px;
  overflow: hidden;
}

#plot-container svg,
.chart-container svg {
  width: 100%;
  height: 100%;
}

#plot-container text,
.chart-container text {
  fill: white;
  font-family: 'Open Sans', sans-serif;
}

.chart-container {
  position: relative;
  z-index: 2;
  padding: 20px;
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}

.gauge-container {
  position: relative;
  overflow: visible;
  width: 100%;
  height: 100%;
  box-sizing: border-box;
}